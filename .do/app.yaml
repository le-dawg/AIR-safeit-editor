# .do/app.yaml
name: air-safeit-journalhelper # Choose a name for your app on DigitalOcean

# Specify the region for your app
region: fra # Example: Frankfurt, choose the region closest to you/your users

# Define the services (components) of your application
services:
  # 1. The Next.js Frontend (apps/web)
  - name: web
    source_dir: apps/web # Directory containing this service's code
    # Go to monorepo root, install deps with yarn, build only 'web' app with turbo
    build_command: cd ../.. && yarn install --immutable --frozen-lockfile && yarn turbo run build --filter=web
    # Check your package.json in apps/web for the correct start script (likely `next start`)
    run_command: yarn start
    http_port: 8080 # Port the Next.js app listens on (UPDATED)
    instance_size_slug: basic-xxs # Choose an appropriate instance size
    instance_count: 1
    routes:
      - path: / # Route external traffic to this service (Satisfies "1 route")
    envs:
      - key: NODE_ENV
        value: production
        type: GENERAL
      - key: NEXT_PUBLIC_LANGGRAPH_API_URL
        # This uses DO's internal service discovery to point to the 'agents' service
        value: ${agents.INTERNAL_URL}
        type: GENERAL
      # Feature Flags from apps/web/.env
      - key: NEXT_PUBLIC_FIREWORKS_ENABLED
        value: "false"
        type: GENERAL
        scope: RUN_AND_BUILD_TIME
      - key: NEXT_PUBLIC_GEMINI_ENABLED
        value: "false"
        type: GENERAL
        scope: RUN_AND_BUILD_TIME
      - key: NEXT_PUBLIC_ANTHROPIC_ENABLED
        value: "false"
        type: GENERAL
        scope: RUN_AND_BUILD_TIME
      - key: NEXT_PUBLIC_OPENAI_ENABLED
        value: "true"
        type: GENERAL
        scope: RUN_AND_BUILD_TIME
      - key: NEXT_PUBLIC_AZURE_ENABLED
        value: "false"
        type: GENERAL
        scope: RUN_AND_BUILD_TIME
      - key: NEXT_PUBLIC_OLLAMA_ENABLED
        value: "false"
        type: GENERAL
        scope: RUN_AND_BUILD_TIME
      - key: NEXT_PUBLIC_GROQ_ENABLED
        value: "false"
        type: GENERAL
        scope: RUN_AND_BUILD_TIME
      # Supabase Public Keys from apps/web/.env
      - key: NEXT_PUBLIC_SUPABASE_URL
        value: "https://byeoqfrjhsnrdwfmegem.supabase.co"
        type: GENERAL
        scope: RUN_AND_BUILD_TIME
      - key: NEXT_PUBLIC_SUPABASE_ANON_KEY # Consider using type: SECRET via DO UI
        value: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ5ZW9xZnJqaHNucmR3Zm1lZ2VtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI2OTEwOTMsImV4cCI6MjA1ODI2NzA5M30.OxaMjTNPfpYcE9CUFg4ljPxkK0XO64RORy6GUXHVbtU"
        type: GENERAL
        scope: RUN_AND_BUILD_TIME
      - key: NEXT_PUBLIC_SUPABASE_URL_DOCUMENTS
        value: "https://byeoqfrjhsnrdwfmegem.supabase.co"
        type: GENERAL
        scope: RUN_AND_BUILD_TIME
      - key: NEXT_PUBLIC_SUPABASE_ANON_KEY_DOCUMENTS # Consider using type: SECRET via DO UI
        value: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ5ZW9xZnJqaHNucmR3Zm1lZ2VtIiwicm9zZSI6ImFub24iLCJpYXQiOjE3NDI2OTEwOTMsImV4cCI6MjA1ODI2NzA5M30.OxaMjTNPfpYcE9CUFg4ljPxkK0XO64RORy6GUXHVbtU"
        type: GENERAL
        scope: RUN_AND_BUILD_TIME

  # 2. The LangGraph Agents Backend (apps/agents)
  - name: agents # Name for the backend service (used for internal DNS)
    source_dir: apps/agents # Directory containing this service's code
    # Go to monorepo root, install deps with yarn, build only 'agents' app with turbo
    build_command: cd ../.. && yarn install --immutable --frozen-lockfile && yarn turbo run build --filter=agents
    # Use the LangGraph CLI dev server, binding to 0.0.0.0 and using the PORT env var from DO
    run_command: npx @langchain/langgraph-cli dev --host 0.0.0.0 --port $PORT --config ../../langgraph.json
    http_port: 10000 # Port the agents backend listens on (verify this)
    instance_size_slug: basic-xxs # Choose an appropriate instance size
    instance_count: 1
    # This service is internal, expose port for communication from 'web' service
    internal_ports: [10000] # Keep this for internal communication
    envs:
      - key: NODE_ENV
        value: production
        type: GENERAL
      # LangSmith from root .env
      - key: LANGCHAIN_TRACING_V2
        value: "true"
        type: GENERAL
      - key: LANGCHAIN_API_KEY # Set value in DO UI
        type: SECRET
      - key: LANGCHAIN_PROJECT
        value: "AIR-SafeIT-journalhelper-v0.2"
        type: GENERAL
      # LLM/Service API Keys from root .env
      - key: OPENAI_API_KEY # Set value in DO UI
        type: SECRET
      - key: ANTHROPIC_API_KEY # Set value in DO UI
        type: SECRET
      - key: FIREWORKS_API_KEY # Set value in DO UI
        type: SECRET
      - key: GOOGLE_API_KEY # For Gemini - Set value in DO UI
        type: SECRET
      - key: GROQ_API_KEY # For Transcription/STT - Set value in DO UI
        type: SECRET
      - key: FIRECRAWL_API_KEY # For Web Scraping - Set value in DO UI
        type: SECRET
      # Supabase Backend Keys from root .env
      # Public keys might be needed by backend logic too
      - key: NEXT_PUBLIC_SUPABASE_URL
        value: "https://byeoqfrjhsnrdwfmegem.supabase.co"
        type: GENERAL
      - key: NEXT_PUBLIC_SUPABASE_ANON_KEY
        value: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ5ZW9xZnJqaHNucmR3Zm1lZ2VtIiwicm9zZSI6ImFub24iLCJpYXQiOjE3NDI2OTEwOTMsImV4cCI6MjA1ODI2NzA5M30.OxaMjTNPfpYcE9CUFg4ljPxkK0XO64RORy6GUXHVbtU"
        type: GENERAL
      - key: SUPABASE_SERVICE_ROLE # Set value in DO UI
        type: SECRET

# You can also define databases, workers, static sites etc. here if needed.